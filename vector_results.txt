[{'id': 'code_snip_11',
 'metadata': {'description': 'This script automates the process of adding a '
                             'defined solvent to a target vial using a dilutor '
                             'tool, followed by dispensing a sample into a '
                             'vial. The overall purpose is to facilitate the '
                             'precise preparation of samples for subsequent '
                             'analysis.\n'
                             '\n'
                             '### Steps Taken:\n'
                             '\n'
                             '1. **Initialize Dilutor Tool**: \n'
                             '   - The procedure begins by obtaining the '
                             'dilutor tool to be used for adding the solvent.\n'
                             '\n'
                             '2. **Switch Dilutor Valve**: \n'
                             '   - The script switches the dilutor valve to '
                             'the specified solvent port to ensure the correct '
                             'solvent is used.\n'
                             '\n'
                             '3. **Prime Dilutor (if required)**: \n'
                             '   - If the `primeBeforeDilution` flag is set to '
                             'true, the dilutor is primed with the specified '
                             'prime volume to ensure there is no air in the '
                             'system before dispensing the solvent.\n'
                             '\n'
                             '4. **Positioning**: \n'
                             '   - The script moves the dilutor to the '
                             'specified target vial (using `MoveToObject` with '
                             'the target index).\n'
                             '\n'
                             '5. **Penetration Method**: \n'
                             '   - Depending on the `useBottomSense` flag, the '
                             'script either uses bottom sensing to determine '
                             'the penetration depth from the bottom of the '
                             'vial or penetrates to a specified depth '
                             'directly.\n'
                             '\n'
                             '6. **Deliver Solvent**: \n'
                             '   - The dilutor delivers the specified volume '
                             'of solvent into the vial using the defined fill '
                             'and dispense speeds, while also incorporating an '
                             'aspirate pull-up delay.\n'
                             '\n'
                             '7. **Wait After Dispensing**: \n'
                             '   - The script waits for a specified dispense '
                             'delay to ensure the solvent has been properly '
                             'delivered before proceeding.\n'
                             '\n'
                             '8. **Leave Object**: \n'
                             '   - The dilutor leaves the vial, with an option '
                             'to leave the drawer open based on the '
                             '`leaveDrawerOpen` flag.\n'
                             '\n'
                             '9. **Dispense Liquid in Vial**: \n'
                             '   - A separate procedure is called to dispense '
                             'a sample into a vial. This involves:\n'
                             '   - Moving to the specified sample rack and '
                             'vial index.\n'
                             '   - Penetrating the vial to a defined depth for '
                             'sample dispensing.\n'
                             '   - Setting the status for sample dispensing '
                             'and executing the dispense operation with the '
                             'specified sample volume and flow rate.\n'
                             '\n'
                             '10. **Pressure Compensation (if required)**: \n'
                             '    - If `pressureCompensation` is enabled, the '
                             'script penetrates the vial again to a defined '
                             'pressure compensation depth, waits for 1 second, '
                             'and then aspirates the same volume to relieve '
                             'any overpressure.\n'
                             '\n'
                             '11. **Final Leave Object**: \n'
                             '    - The procedure concludes by leaving the '
                             'vial, ensuring that the automation process is '
                             'complete.\n'
                             '\n'
                             'This structured approach ensures that the '
                             'solvent is accurately added to the vials, and '
                             'the samples are dispensed correctly, preparing '
                             'them for further analysis.',
              'name': 'code_snip_11',
              'script': 'procedure Dilutor_Add_Solvent(    tool: '
                        'IToolDilutor,    target : ITray,    targetIndex : '
                        'Integer,    solventVolume : Volume,    primeVolume : '
                        'Volume,    solventPortDilutor : Integer,    '
                        'useBottomSense : Boolean,    heightFromBottom : '
                        'Length,    fillSpeed : Flow,    dispenseSpeed : '
                        'Flow,    destinationPenetrationDepth : Length,    '
                        'aspirateDelay : Time,    primeBeforeDilution : '
                        'Boolean,    leaveDrawerOpen : Boolean,    '
                        'dispenseDelay : Time)vardilutor : '
                        'IDilutorbegindilutor = tool.Dilutor    '
                        'SwitchDilutorValve( dilutor = dilutor, valvePosition '
                        '= solventPortDilutor )    if primeBeforeDilution == '
                        'true then    PrimeDilutor( dilutor = dilutor, '
                        'solventPort = solventPortDilutor, volume = '
                        'primeVolume )    end    MoveToObject( target = '
                        'target, index = targetIndex )    if useBottomSense == '
                        'true then    PenetrateWithBottomSense(  target = '
                        'target, index = targetIndex,  heightFromBottom = '
                        'heightFromBottom )    else    PenetrateObject( target '
                        '= target, index = targetIndex, depth = '
                        'destinationPenetrationDepth )    end    '
                        'DeliverLiquidDilutor( dilutor = dilutor, volume = '
                        'solventVolume, aspiratePullupDelay = aspirateDelay, '
                        'aspirateFlowRate = fillSpeed, dispenseFlowRate = '
                        'dispenseSpeed,                          solventPort = '
                        'solventPortDilutor )                              '
                        'Wait(time=dispenseDelay)                                  '
                        'LeaveObject( leaveDrawerOpen = leaveDrawerOpen '
                        ')end    procedure DispenseLiquidInVial(    '
                        'sampleRack:ITray,    sampleIndex:Integer,    '
                        'sampleVolume:Volume,    '
                        'destinationPenetrationDepth:Length,    '
                        'dispenseSpeed:Flow,    '
                        'pressureCompensation:Boolean{true=<Yes>,false=<No>} = '
                        'false    )    const    '
                        'PressureCompPenetration:Length=12mm    '
                        'PenetrationSpeed:Speed=50mm/s    var    begin    // '
                        'dispense in target    MoveToObject( '
                        'target=sampleRack, index=sampleIndex )    '
                        'PenetrateObject( target=sampleRack, '
                        'index=sampleIndex, depth=destinationPenetrationDepth '
                        ')    SetStatus(key="DispenseSample", sampleVolume '
                        ')    DispenseSyringe( volume=sampleVolume, '
                        'flowRate=dispenseSpeed )    // aspirate inside vial '
                        'to compensate overpressure    if pressureCompensation '
                        'then    SetStatus(key="CompensatePressure")    '
                        'PenetrateObject( target=sampleRack, '
                        'index=sampleIndex, depth=PressureCompPenetration )    '
                        'Wait( time=1s )    AspirateSyringe( '
                        'volume=sampleVolume )    LeaveObject()    else    '
                        'LeaveObject()    end    end  ',
              'tags': ['procedure',
                       'solvent',
                       'volume',
                       'target',
                       'dispense',
                       'liquid',
                       'sample',
                       'penetrate',
                       'delay',
                       'flow']},
 'score': 0.543973,
 'values': []}, {'id': 'Dillme sample prep v0.6 30Jun23 10s postfilter delay',
 'metadata': {'description': 'This procedure automates a series of laboratory '
                             'tasks involving the preparation and analysis of '
                             'samples using various tools and equipment. The '
                             'main goal is to facilitate the transfer of '
                             'solvents, sample preparation, and injection into '
                             'a gas chromatograph (GC) for analysis.\n'
                             '\n'
                             '### Steps of the Procedure:\n'
                             '\n'
                             '1. **Check Cooled Stack Temperature**:\n'
                             '   - Verify if the cooled stack is present and '
                             'set its temperature if necessary.\n'
                             '\n'
                             '2. **Pick Dispersant Tool**:\n'
                             '   - Change the tool to a 10 mL syringe for '
                             'dispersant handling.\n'
                             '\n'
                             '3. **Aspirate Dispersant**:\n'
                             '   - Move to the solvent station and aspirate a '
                             'defined volume of dispersant.\n'
                             '\n'
                             '4. **Add Dispersant to Target Vial**:\n'
                             '   - Move to the target vial (either from the '
                             'cooled stack or sample rack) and dispense the '
                             'aspirated dispersant.\n'
                             '\n'
                             '5. **Vortex Vial**:\n'
                             '   - Use a vortex mixer to mix the contents of '
                             'the vial at a defined speed and time.\n'
                             '\n'
                             '6. **Precipitation (if applicable)**:\n'
                             '   - If precipitation is required, transport the '
                             'vial to a centrifuge, load a counterbalance '
                             'vial, and centrifuge for a specified time.\n'
                             '\n'
                             '7. **Transfer Supernatant**:\n'
                             '   - Aspirate the supernatant from the vial and '
                             'transfer it to a designated supernatant rack.\n'
                             '\n'
                             '8. **Aspirate Air (if applicable)**:\n'
                             '   - If enabled, aspirate a defined volume of '
                             'air from the vial headspace.\n'
                             '\n'
                             '9. **Aspirate Water**:\n'
                             '   - Clean the syringe, then aspirate a defined '
                             'volume of water from the solvent station.\n'
                             '\n'
                             '10. **Add Water to Target Vial**:\n'
                             '    - Move to the target vial and dispense the '
                             'aspirated water.\n'
                             '\n'
                             '11. **Aspirate and Add DCM**:\n'
                             '    - For each defined addition, clean the '
                             'syringe, aspirate DCM from the solvent station, '
                             'and dispense it into the target vial.\n'
                             '\n'
                             '12. **Vortex Vial Again**:\n'
                             '    - Mix the vial contents again using the '
                             'vortex mixer.\n'
                             '\n'
                             '13. **Centrifuge Vial (if applicable)**:\n'
                             '    - If centrifugation is enabled, transport '
                             'the vial to the centrifuge, load a '
                             'counterbalance vial, and centrifuge.\n'
                             '\n'
                             '14. **Perform uSPE**:\n'
                             '    - Execute the uSPE procedure, which involves '
                             'transferring the bottom phase from the vial to a '
                             'cartridge and performing filtration.\n'
                             '\n'
                             '15. **Transfer Bottom Phase for LC Sample Prep '
                             '(if applicable)**:\n'
                             '    - If LC sample preparation is enabled, '
                             'transfer the bottom phase to a new sample rack.\n'
                             '\n'
                             '16. **Clean DCM Tool**:\n'
                             '    - Clean the syringe used for DCM with the '
                             'wash station.\n'
                             '\n'
                             '17. **Perform Injection (if applicable)**:\n'
                             '    - If injection is enabled, change to a 10 µL '
                             'syringe, wait for the GC to be ready, aspirate '
                             'the sample from the target vial, and inject it '
                             'into the GC.\n'
                             '\n'
                             '18. **Perform LC Sample Prep (if applicable)**:\n'
                             '    - If LC sample preparation is enabled, '
                             'prepare the sample by aspirating water and '
                             'adding it to the target vial, followed by '
                             'evaporation using the MHE procedure.\n'
                             '\n'
                             '19. **Final Dilution (if applicable)**:\n'
                             '    - If final dilution is required, aspirate '
                             'and add a defined volume of water to the target '
                             'vial, and vortex the contents.\n'
                             '\n'
                             '20. **Return Home**:\n'
                             '    - Ensure all vials are returned to their '
                             'designated positions after the procedure.\n'
                             '\n'
                             'This structured approach ensures efficient '
                             'sample preparation and analysis while minimizing '
                             'manual intervention and potential errors.',
              'name': 'Dillme sample prep v0.6 30Jun23 10s postfilter delay',
              'script': 'procedure Main(\n'
                        '\n'
                        '\tcentrifuge:ICentrifuge{all ICentrifuge, none},\n'
                        '\tsyringe10000:ITool,\n'
                        '\tsyringe1000:ITool,\n'
                        '\tsyringe10:ToolLiquidD7_57 {none, all '
                        'ToolLiquidD7_57},\n'
                        '\tsampleRackVT15:IRack,\n'
                        '\tsampleRack:IRack,\n'
                        '\tsupernatantRack:IRack,\n'
                        '\tinjector:IInjector{none, all Injector},\n'
                        '\tsolventStation:IMoveTarget{all IWashStation, all '
                        'LargeVolumeSolventStation},\n'
                        '\twashStation:IWashStation,\n'
                        '\tvortexMixer:VortexMixer,\n'
                        '\tgasChromatograph:GC,\n'
                        '\t\n'
                        '\tsampleIndex:Integer,\n'
                        '\twaterIndex:Integer[0..5]=1,\n'
                        '\tcleandcmIndex:Integer[0..5]=2,\n'
                        '\tdispersantIndex:Integer[0..5]=3,\n'
                        '\tspeedc:Frequency[0rpm..4800rpm]=1200rpm,\n'
                        '\tspeedc02:Frequency[0rpm..4800rpm]=1200rpm,\n'
                        '\twaitforconstsc:Boolean=false,\n'
                        '\twaitforconstsc02:Boolean=false,\n'
                        '\ttimec:Time[0s..3600s]=300s,\n'
                        '\ttimec02:Time[0s..3600s]=300s,\n'
                        '\twaterVolume:Volume[0mL..10mL]=1mL,\n'
                        '\twaterfsVolume:Volume[0mL..10mL]=0.1mL,\n'
                        '\twaterfsCount:Integer[0..15]=3,\n'
                        '\tdcmfsVolume:Volume[0mL..10mL]=0.1mL,\n'
                        '\tcleandcmVolume:Volume[0mL..10mL]=0.4mL,\n'
                        '\tdcmfsCount:Integer[0..15]=3,\n'
                        '\tdispersantVolume:Volume[0mL..10mL]=1mL,\n'
                        '\tdispersantfsVolume:Volume[0mL..10mL]=0.1mL,\n'
                        '\tdispersantfsCount:Integer[0..15]=3,\n'
                        '\tsampleVolume:Volume[0uL..10uL]=1uL,\n'
                        '\t'
                        'vortexMixerSpeed_01:Frequency[0rpm..2000rpm]=1200rpm,\n'
                        '\t'
                        'vortexMixerSpeed_02:Frequency[0rpm..2000rpm]=1200rpm,\n'
                        '    '
                        'vortexMixerSpeed_03:Frequency[0rpm..2000rpm]=1200rpm,\t\n'
                        '\tvortexTime_01:Time[0s..6000s]=60s,\n'
                        '\tvortexTime_02:Time[0s..6000s]=60s,\n'
                        '\tvortexTime_03:Time[0s..6000s]=60s,\n'
                        '\ttransferVolume:Volume[0uL..10000uL]=100uL,\n'
                        '\ttransferVolume_02:Volume[0uL..10000uL]=100uL,\n'
                        '\tinjectionfsCount:Integer[0..15]=3,\n'
                        '\tinjectionfsVolume:Volume[0uL..10uL]=3uL,\n'
                        '\tinjectionWashCycles:Integer[0..15]=3,\n'
                        '\tpenetrationDepth_01:Length[0mm..100mm]=45mm,\n'
                        '\tpenetrationDepth_02:Length[0mm..100mm]=20mm,\n'
                        '\tpenetrationDepth_03:Length[0mm..100mm]=45mm,\n'
                        '\tpenetrationDepth_04:Length[0mm..100mm]=20mm,\n'
                        '\tpenetrationDepth_05:Length[0mm..100mm]=28mm,\n'
                        '\tpenetrationDepth_06:Length[0mm..100mm]=20mm,\n'
                        '\tpenetrationDepth_07:Length[0mm..100mm]=28mm,\n'
                        '\tpenetrationDepth_08:Length[0mm..100mm]=20mm,\n'
                        '\tpenetrationDepth_09:Length[0mm..100mm]=20mm,\n'
                        '\tpenetrationSpeed_01:Speed[1mm/s..100mm/s]=5mm/s,\n'
                        '\tpenetrationSpeed_02:Speed[1mm/s..100mm/s]=5mm/s,\n'
                        '\tdcmAdditions:Integer[1..10]=1,\n'
                        '\tdcmTransfers:Integer[1..10]=1,\n'
                        '\tdestinationIndex:Integer[1..8]=3,\n'
                        '\tdestinationIndex02:Integer[1..8]=3,\n'
                        '\tbottomSenseExtractionVial:Boolean,\n'
                        '\tbottomSenseSampleVial:Boolean,\n'
                        '\theightFromBottom:Length[0mm..10mm]=0.5mm,\n'
                        '\t\n'
                        '\tuseCentrifuge:Boolean{false=&lt;No&gt;, '
                        'true=&lt;Yes&gt;}=false,\n'
                        '\tdoPrecipitation:Boolean{false=&lt;No&gt;, '
                        'true=&lt;Yes&gt;}=false,\n'
                        '\n'
                        '\t//Wash parameters\n'
                        '\t\n'
                        '\tdcmIndex:Integer[0..5]=3,\n'
                        '\twashCycles:Integer[0..15]=3,\n'
                        '\twashPercentage:Percentage[0%..110%]=80%,\n'
                        '\n'
                        '\t//Cooled Drawer\n'
                        '\t\n'
                        '\tcooledStack:ITemperatureControlStack{none, all '
                        'ITemperatureControlStack},\n'
                        '\trackInCooledStack:IRack{none, all IRack},\n'
                        '\tactivateCooledStack:Boolean{false=&lt;Off&gt;, '
                        'true=&lt;On&gt;}=false,\n'
                        '\t'
                        'waitForReadinessCooledStack:Boolean{false=&lt;Off&gt;, '
                        'true=&lt;On&gt;}=false,\n'
                        '\tcooledStackTemperature:Temperature[1°C..40°C]=4°C,\n'
                        '\t\n'
                        '\t// MHE\n'
                        '\n'
                        '    evaporationTool:IToolGas{all IToolGas, none},\n'
                        '    mheAdapter:MheAdapter{all MheAdapter, none},\n'
                        '\n'
                        '    // Headspace Tool\n'
                        '\n'
                        '    '
                        'gasFlowPreHeatTemperature:Temperature[40°C..150°C]=85°C,\n'
                        '    heatSyringe:Boolean=true,\n'
                        '    waitForTempReadinessSyringe:Boolean=false,\n'
                        '    '
                        'setSyringeStandbyTemperature:Boolean{false=&lt;Automatic&gt;, '
                        'true=&lt;Manual&gt;}=true,\n'
                        '    '
                        'syringeStandbyTemperature:Temperature[30°C..150°C]=50°C,\n'
                        '    purgedryTimeafterWash:Time[1s..60s]=30s,\n'
                        '\n'
                        '    // MHE Adapter \n'
                        '\n'
                        '    evaporationTime:Time[0s..3600s]=1200s,\n'
                        '    mheAdapterPenetrationDepth:Length[0mm..12mm]= '
                        '12mm,\n'
                        '    \n'
                        '    // Additional LC sample prep\n'
                        '    \n'
                        '    lcSamplePrep:Boolean{false=&lt;No&gt;, '
                        'true=&lt;Yes&gt;}=true,\n'
                        '    sampleRack2:IRack,\n'
                        '    lcVolume:Volume[0uL..10000uL]=100uL,\n'
                        '    \n'
                        '    // Final dilution\n'
                        '    \n'
                        '    doFinalDilution:Boolean{false=&lt;No&gt;, '
                        'true=&lt;Yes&gt;}=false,\n'
                        '    lcVolume2:Volume[0uL..10000uL]=900uL,\n'
                        '    \n'
                        '    //uSPE\n'
                        '    \n'
                        '    //disposeCartridge:Boolean {true=&lt;Yes&gt;, '
                        'false=&lt;No&gt;}=false,\n'
                        '    cartridgeWasteContainer:IVialContainer {none, all '
                        'WasteContainer},\n'
                        '    cartridgeTrayuSPE:IRack,\n'
                        '    elutionTrayuSPE:IRack,\n'
                        '    //eluateTray:IRack,\n'
                        '        \n'
                        '    //injection\n'
                        '    doInjection:Boolean {true=&lt;Yes&gt;, '
                        'false=&lt;No&gt;}=false,\n'
                        '    \n'
                        '    //aspirate air from HS\n'
                        '    aspirateAir:Boolean {true=&lt;Yes&gt;, '
                        'false=&lt;No&gt;}=true,\n'
                        '    aspirationVolume:Volume[0uL..10mL]=5mL,\n'
                        '    \n'
                        '    //conterbalance\n'
                        '    vialCB02_Index:Integer[0..60]=0,\n'
                        '    vialCB01_Index:Integer[0..60]=0,\n'
                        '    rackCB02:IRack,\n'
                        '    rackCB01:IRack,\n'
                        '    destinationIndexCB02:Integer[0..8]=0,\n'
                        '    destinationIndexCB01:Integer[0..8]=0\n'
                        '    \n'
                        '    \n'
                        ')\n'
                        '\n'
                        'const\n'
                        '\n'
                        '\tCooledStackTempTolerance:DeltaTemperature = 0.2dK\n'
                        '\tControleStackTemperature:Boolean=true\n'
                        '    SyringeTempTolerance:DeltaTemperature = 5dK\n'
                        '    DcmTransfers:Integer = 1\n'
                        '    DcmAdditions:Integer = 1\n'
                        '    Delta:Integer = 0\n'
                        '        \n'
                        'var\n'
                        '\n'
                        '\tvial:IVolatileVial\n'
                        '    vialCB01:IVolatileVial\n'
                        '    vialCB02:IVolatileVial\n'
                        '    cartridge:IVolatileObject    \n'
                        '    n:Integer\n'
                        '    i:Integer\n'
                        '    purgeTime:Time\n'
                        '    washVolume:Percentage\n'
                        '    washDepth:Length\n'
                        '    voidDistance:Length\n'
                        '    standbyTemperature:Temperature\n'
                        '    syringeVolume:Volume\n'
                        '\n'
                        '// set cooled stack temperature here\n'
                        '\n'
                        'procedure SetCooledStackTemperature '
                        '(cooledStack:ITemperatureControlStack, wait:Boolean, '
                        'activateCooledStack:Boolean)\n'
                        '\n'
                        'begin\n'
                        '\n'
                        'if cooledStack &lt;&gt; none and activateCooledStack '
                        '&lt;&gt; false then \n'
                        '\n'
                        '      if activateCooledStack then\n'
                        '         SetStatus(key="CooledStackTemperature", '
                        'cooledStackTemperature)\n'
                        '         SetTemperature( target=cooledStack, '
                        'temperature=cooledStackTemperature, wait=wait, '
                        'tolerance=CooledStackTempTolerance)  \n'
                        '      end\n'
                        'end\n'
                        '\n'
                        '// verify cooled stack temperature\n'
                        '\n'
                        'if activateCooledStack then\n'
                        '       SetStatus(key="Message1Value", '
                        '"CooledStackTemperature", cooledStackTemperature)\n'
                        '       SetTemperature( target=cooledStack, '
                        'temperature=cooledStackTemperature, '
                        'wait=waitForReadinessCooledStack, '
                        'tolerance=CooledStackTempTolerance)\n'
                        '      end\n'
                        'end\n'
                        '\n'
                        '// MHE evaporation\n'
                        '    \n'
                        'procedure MHE (\n'
                        '        \n'
                        '    // Headspace Tool\n'
                        '\n'
                        '//    '
                        'gasFlowPreHeatTemperature:Temperature[40°C..150°C]=85°C,\n'
                        '//    heatSyringe:Boolean=true,\n'
                        '//    waitForTempReadinessSyringe:Boolean=false,\n'
                        '//    '
                        'setSyringeStandbyTemperature:Boolean{false=&lt;Automatic&gt;, '
                        'true=&lt;Manual&gt;}=true,\n'
                        '//    '
                        'syringeStandbyTemperature:Temperature[30°C..150°C]=50°C,\n'
                        '//    purgedryTimeafterWash:Time[1s..60s]=30s,\n'
                        '\n'
                        '    // MHE Adapter \n'
                        '\n'
                        '//    evaporationTime:Time[0s..3600s]=1200s,\n'
                        '//    mheAdapterPenetrationDepth:Length[0mm..12mm]= '
                        '12mm\n'
                        '        \n'
                        '        )\n'
                        '    begin\n'
                        '\n'
                        '    // mount vial transport tool\n'
                        '   \n'
                        '   SetStatus(key="GetTool")\n'
                        '   ChangeTool( tool=evaporationTool)\n'
                        '     \n'
                        '   if heatSyringe then\n'
                        '\t\tif setSyringeStandbyTemperature then\n'
                        '\t\t\tstandbyTemperature=syringeStandbyTemperature\n'
                        '\t\telse\n'
                        '\t\t\tstandbyTemperature=gasFlowPreHeatTemperature\n'
                        '\t\tend\n'
                        '\t\tSetStandbyTemperature( '
                        'target=evaporationTool.SyringeHeater, '
                        'standbyTemperature=standbyTemperature)\t\n'
                        '\tend\n'
                        '   \n'
                        '   if heatSyringe then\n'
                        '      SetStatus(key="HeatSyringe", '
                        'gasFlowPreHeatTemperature)\n'
                        '      SetTemperature( '
                        'target=evaporationTool.SyringeHeater, '
                        'temperature=gasFlowPreHeatTemperature, wait=false)\n'
                        '   end\n'
                        '   \n'
                        '   // verify syringe temperature\n'
                        '   \n'
                        '   if heatSyringe then\n'
                        '      SetStatus(key="HeatSyringe", '
                        'gasFlowPreHeatTemperature)\n'
                        '      SetTemperature( '
                        'target=evaporationTool.SyringeHeater, '
                        'temperature=gasFlowPreHeatTemperature, \n'
                        '                      '
                        'wait=waitForTempReadinessSyringe, '
                        'tolerance=SyringeTempTolerance)\n'
                        '   end\n'
                        '      \n'
                        '   // purge vial using the MHE adapter\n'
                        '   \n'
                        '   // SetStatus(key="EvaporateSolvent")\n'
                        '   PickToolAdapter( toolAdapter=mheAdapter)\n'
                        '   PurgeVial( target=vial, purgeTime=evaporationTime, '
                        'penetrationDepth=mheAdapterPenetrationDepth)\n'
                        '   ParkToolAdapter()\n'
                        '    \t           \n'
                        '   // Post-injection syringe purge\n'
                        '   SetStatus(key="SyringePurgeStart")\n'
                        '   StartPurgeSyringe()\n'
                        '   StartTimer( timer=1)\n'
                        '   purgeTime = purgedryTimeafterWash\n'
                        '   WaitForTimer( timer=1, time=purgedryTimeafterWash '
                        ')\n'
                        '   StopPurgeSyringe( )\n'
                        '     \n'
                        'end\n'
                        '\n'
                        '// uSPE procedure\n'
                        '        \n'
                        'procedure USPE ()        \n'
                        '    //pick 1mL syringe\n'
                        '\n'
                        '    begin        \n'
                        '    SetStatus(key="Message","Pick tool")    \n'
                        '        \n'
                        '\tChangeTool(tool=syringe1000)\n'
                        '\t'
                        'syringeVolume=syringe1000.SyringeType.SyringeVolume\n'
                        '    \n'
                        '    SetStatus(key="Message1Value","Solvent '
                        'Transfer",transferVolume)\n'
                        '        \n'
                        '    for n=1 to DcmTransfers do\n'
                        '    \n'
                        '\t//transfer bottom phase\n'
                        '\n'
                        '    if cooledStack  &lt;&gt; none then\n'
                        '\t\n'
                        '\t\tvial=rackInCooledStack[sampleIndex+Delta]\n'
                        '\t\n'
                        '\telse\n'
                        '\t\n'
                        '\t\tvial=supernatantRack[sampleIndex+Delta]  //target '
                        'needs to be re-defined at each cycle\n'
                        '\t\n'
                        '\tend    \n'
                        '  \n'
                        '        \n'
                        '\tMoveToObject(target=vial)\n'
                        '    \n'
                        '    if bottomSenseExtractionVial then '
                        'PenetrateWithBottomSense(target=vial,speed=penetrationSpeed_02,heightFromBottom=heightFromBottom)\n'
                        '    \n'
                        '    else\n'
                        '    \n'
                        '    '
                        'PenetrateObject(target=vial,depth=penetrationDepth_05,speed=penetrationSpeed_02)\n'
                        '    \n'
                        '    end\n'
                        '        \n'
                        '\tAspirateSyringe(volume=transferVolume)\n'
                        '\tLeaveObject()\n'
                        '\t\n'
                        '    //define new target    \n'
                        '    cartridge=cartridgeTrayuSPE[sampleIndex]    \n'
                        '        \n'
                        '    //pick up cardtridge\n'
                        '\n'
                        '    SetStatus(key="Message","Pick Up '
                        'Cartridge")        \n'
                        '\n'
                        '    MoveToObject(target=cartridge)\n'
                        '    '
                        '//PenetrateObject(target=vial,depth=penetrationDepth_06,speed=penetrationSpeed_02)    \n'
                        '    MoveRelative( movementZ=-2mm, '
                        'forceDirectMovement=true )\n'
                        '    LeaveObject()\n'
                        '        \n'
                        '    //perform filtration\n'
                        '\n'
                        '    SetStatus(key="Message","Perform '
                        'Filtration")    \n'
                        '        \n'
                        '    '
                        'TransportVial(source=cartridge,destination=elutionTrayuSPE,destinationIndex=sampleIndex,needleTransportPenetrationDepth=20mm, '
                        'leaveObject=false)  \n'
                        '    DispenseSyringe(volume=transferVolume, '
                        'flowRate=10µL/s)\n'
                        '    Wait(time=10s) \n'
                        '\n'
                        '    //dispose cartridge\n'
                        '    \n'
                        '    SetStatus(key="Message","Dispose Cartridge")\n'
                        '        \n'
                        '    '
                        'TransportVial(source=cartridge,destination=cartridgeWasteContainer,home="Destination",leaveObject=true)\n'
                        '\t\tfor i=1 to 2 do\t// additional movement of the '
                        'lower needle guide to ensure discarding of the '
                        'cartridge\n'
                        '\t\t\t\tMoveNeedleGuide( movement= 10mm, '
                        'accelerationFactor=20%, isRelativeMovement=false)\n'
                        '\t\t\t\tMoveNeedleGuide( movement= 0mm , '
                        'accelerationFactor=20%, isRelativeMovement=false)\n'
                        '            end        \n'
                        '        end\n'
                        'end          \n'
                        '        \n'
                        '// main procedure starts here\n'
                        '\n'
                        'begin\n'
                        '\n'
                        '// ----- Check hardware -----\n'
                        '\n'
                        '\tif cooledStack  &lt;&gt; none then\n'
                        '\n'
                        '\tif\tcooledStackTemperature &lt;&gt; 40°C  then\n'
                        '\t\t\tSetCooledStackTemperature '
                        '(cooledStack=cooledStack, wait=true, '
                        'activateCooledStack=ControleStackTemperature) //wait '
                        'for readiness=true\n'
                        '\t\tend\n'
                        '\tend\n'
                        '\n'
                        '    //pick 10mL syringe\n'
                        '\t\n'
                        '    '
                        'SetStatus(key="Message","PickDispersantTool")    \n'
                        '    \n'
                        '    '
                        'syringeVolume=syringe10000.SyringeType.SyringeVolume\n'
                        '    ChangeTool(tool=syringe10000)\n'
                        '\t    \n'
                        '    //aspirate dispersant\n'
                        '\n'
                        '    '
                        'SetStatus(key="Message1Value","AspirateDispersant",dispersantVolume)            \n'
                        '\n'
                        '    '
                        'MoveToObject(target=solventStation,index=dispersantIndex)\n'
                        '\t'
                        'PenetrateObject(target=solventStation,depth=penetrationDepth_01,speed=penetrationSpeed_01)\n'
                        '\t'
                        'FillingStrokes(volume=dispersantfsVolume,count=dispersantfsCount)\n'
                        '\t'
                        'AspirateSyringe(volume=dispersantVolume,flowRate=200uL/s)\n'
                        '\tLeaveObject()\n'
                        '    \n'
                        '    //define target\t\n'
                        '\t\n'
                        '\tif cooledStack  &lt;&gt; none then\n'
                        '\t\n'
                        '\t\tvial=rackInCooledStack[sampleIndex]\n'
                        '\t\n'
                        '\telse\n'
                        '\t\n'
                        '\t\tvial=sampleRackVT15[sampleIndex]\n'
                        '\t\n'
                        '\tend\n'
                        '\n'
                        '    //add dispersant to target\n'
                        '    \n'
                        '    SetStatus(key="Message1Value","Add '
                        'Dispersant",dispersantVolume)\n'
                        '\n'
                        '    MoveToObject(target=vial)\n'
                        '\t'
                        'PenetrateObject(target=vial,depth=penetrationDepth_02,speed=penetrationSpeed_01)\n'
                        '\t'
                        'DispenseSyringe(volume=dispersantVolume,flowRate=200uL/s)\n'
                        '\tLeaveObject()\n'
                        '     \n'
                        '\t//vortex vial\n'
                        '        \n'
                        '    SetStatus(key="Message2Values","Vortex '
                        'Vial",vortexMixerSpeed_01,vortexTime_01)    \n'
                        '        \n'
                        '\t'
                        'VortexVial(source=vial,vortexMixer=vortexMixer,vortexMixerSpeed=vortexMixerSpeed_01,time=vortexTime_01)\n'
                        '\tTransportVialHome(vial=vial)\n'
                        '\n'
                        '    //precipitation\n'
                        '\n'
                        '\tif doPrecipitation then // if centrifuge is '
                        'optional, waiting time = centrifugation time\n'
                        '    \n'
                        '    SetStatus(key="Message2Values","Run '
                        'Precipitation",speedc02,timec02)\n'
                        '        \n'
                        '    //move vial to centrifuge\n'
                        '    '
                        'TransportVial(source=vial,destination=centrifuge,destinationIndex=destinationIndex02)\n'
                        '\t\n'
                        '    //move counterbalance vial to centrifuge (define '
                        'conunterbalance vial)\n'
                        '    \n'
                        '    vialCB02=rackCB02[vialCB02_Index]        \n'
                        '    '
                        'TransportVial(source=vialCB02,destination=centrifuge,destinationIndex=destinationIndexCB02)    \n'
                        '            \n'
                        '\t//centrifuge vial\n'
                        '\n'
                        '\t'
                        'OperateCentrifugeCover(target=centrifuge,position="Closed")\n'
                        '    \n'
                        '    '
                        'SetCentrifuge(target=centrifuge,speed=speedc02,state=true,waitForConstSpeed=waitforconstsc02)\n'
                        '    Wait(time=timec02)\n'
                        '    '
                        'SetCentrifuge(target=centrifuge,speed=speedc02,state=false,waitForConstSpeed=waitforconstsc02)\n'
                        '    \n'
                        '\t//move vial back home\n'
                        '\tTransportVialHome(vial=vial)\n'
                        '\n'
                        '    //move counterbalance vial back home\n'
                        '\tTransportVialHome(vial=vialCB02)    \n'
                        '        \n'
                        '\t'
                        'OperateCentrifugeCover(target=centrifuge,position="Closed")\n'
                        '\n'
                        '    else \n'
                        '    TransportVialHome(vial=vial)\n'
                        '    \n'
                        '    SetStatus(key="Message1Value","Wait",timec02)\n'
                        '        \n'
                        '    Wait(time=timec02)\n'
                        '    end        \n'
                        '\n'
                        '    //pick 1mL syringe\n'
                        '\t\n'
                        '\t//ChangeTool(tool=syringe1000)\n'
                        '\t'
                        '//syringeVolume=syringe1000.SyringeType.SyringeVolume\n'
                        '\n'
                        '\t//transfer supernatant\n'
                        '\n'
                        '    SetStatus(key="Message1Value","Transfer '
                        'Supernatant",transferVolume_02)    \n'
                        '        \n'
                        '    if cooledStack  &lt;&gt; none then\n'
                        '\t\n'
                        '\t\tvial=rackInCooledStack[sampleIndex]\n'
                        '\t\n'
                        '\telse\n'
                        '\t\n'
                        '\t\tvial=sampleRackVT15[sampleIndex]  //target needs '
                        'to be re-defined at each cycle\n'
                        '\t\n'
                        '\tend    \n'
                        '      \n'
                        '\tMoveToObject(target=vial)\n'
                        '    '
                        'PenetrateObject(target=vial,depth=penetrationDepth_08,speed=penetrationSpeed_02)\n'
                        '            \n'
                        '\t'
                        'AspirateSyringe(volume=transferVolume_02,flowRate=200uL/s)\n'
                        '\tLeaveObject()\n'
                        '\t\n'
                        '\t//define new target \n'
                        '\tvial=supernatantRack[sampleIndex+Delta]\n'
                        '\n'
                        '\tMoveToObject(target=vial)\n'
                        '\t'
                        'PenetrateObject(target=vial,depth=penetrationDepth_09,speed=penetrationSpeed_02)\n'
                        '\t'
                        'DispenseSyringe(volume=transferVolume_02,flowRate=200uL/s)\n'
                        '\tLeaveObject()\n'
                        '     \n'
                        '\t//aspirate 5mL of air from vial headspace\n'
                        '\n'
                        '    if aspirateAir then    \n'
                        '        \n'
                        '        SetStatus(key="Message","Aspirate 5mL of air '
                        'from vial headspace")        \n'
                        '\n'
                        '        MoveToObject(target=vial)\n'
                        '        '
                        'PenetrateObject(target=vial,depth=20mm,speed=2mm/s)\n'
                        '\t    '
                        'AspirateSyringe(volume=aspirationVolume,flowRate=1000uL/s)\n'
                        '        LeaveObject()\n'
                        '        EmptySyringe(flowRate=500uL/s)    \n'
                        '        \n'
                        '    end\n'
                        '        \n'
                        '\t//aspirate water\n'
                        '        \n'
                        '    SetStatus(key="Message1Value","Aspirate '
                        'Water",waterVolume)    \n'
                        '\n'
                        '    '
                        'CleanSyringe(washSource=washStation,washIndex=dcmIndex,cycles=injectionWashCycles,washVolume=washPercentage,washPenetrationDepth=40mm,aspirateFlowRate=500uL/s)\t        \n'
                        '\t'
                        'MoveToObject(target=solventStation,index=waterIndex)\n'
                        '\t'
                        'PenetrateObject(target=solventStation,depth=penetrationDepth_01,speed=penetrationSpeed_01)\n'
                        '\t'
                        'FillingStrokes(volume=waterfsVolume,count=waterfsCount)\n'
                        '\t'
                        'AspirateSyringe(volume=waterVolume,flowRate=200uL/s)\n'
                        '\tLeaveObject()\n'
                        '\t\n'
                        '\t//add water to target\n'
                        '        \n'
                        '    SetStatus(key="Message1Value","Add '
                        'Water",waterVolume)    \n'
                        '        \n'
                        '\tMoveToObject(target=vial)\n'
                        '\t'
                        'PenetrateObject(target=vial,depth=penetrationDepth_02,speed=penetrationSpeed_01)\n'
                        '\t'
                        'DispenseSyringe(volume=waterVolume,flowRate=200uL/s)\n'
                        '\tLeaveObject()\n'
                        '\n'
                        '    for n = 1 to dcmAdditions do\n'
                        '    \n'
                        '\t//aspirate dcm\n'
                        '        \n'
                        '    SetStatus(key="Message1Value","Aspirate '
                        'Solvent",cleandcmVolume)    \n'
                        '        \n'
                        '    '
                        'CleanSyringe(washSource=washStation,washIndex=dcmIndex,cycles=injectionWashCycles,washVolume=washPercentage,washPenetrationDepth=40mm,aspirateFlowRate=500uL/s)\t\n'
                        '    '
                        'MoveToObject(target=solventStation,index=cleandcmIndex)\n'
                        '\t'
                        'PenetrateObject(target=solventStation,depth=penetrationDepth_03,speed=penetrationSpeed_02)\n'
                        '\t'
                        'FillingStrokes(volume=dcmfsVolume,count=dcmfsCount)\n'
                        '\tAspirateSyringe(volume=cleandcmVolume)\n'
                        '\tLeaveObject()\n'
                        '\t\n'
                        '\t//add dcm to target\n'
                        '                    \n'
                        '    SetStatus(key="Message1Value","Add '
                        'Solvent",cleandcmVolume)    \n'
                        '        \n'
                        '\tMoveToObject(target=vial)\n'
                        '\t'
                        'PenetrateObject(target=vial,depth=penetrationDepth_04,speed=penetrationSpeed_02)\n'
                        '\tDispenseSyringe(volume=cleandcmVolume)\n'
                        '\tLeaveObject()\n'
                        '    \n'
                        '    end\n'
                        '        \n'
                        '\t//vortex vial\n'
                        '                   \n'
                        '    SetStatus(key="Message2Values","Vortex '
                        'Vial",vortexMixerSpeed_02,vortexTime_02)    \n'
                        '        \n'
                        '\t'
                        'VortexVial(source=vial,vortexMixer=vortexMixer,vortexMixerSpeed=vortexMixerSpeed_02,time=vortexTime_02)\n'
                        '\n'
                        '    if useCentrifuge then // if centrifuge is '
                        'optional, waiting time = centrifugation time\n'
                        '    \n'
                        '        SetStatus(key="Message2Values","Centrifuge '
                        'Vial",speedc,timec)\n'
                        '        \n'
                        '\t   //move vial to centrifuge\n'
                        '\t   '
                        'TransportVial(source=vial,destination=centrifuge,destinationIndex=destinationIndex)\n'
                        '\t\n'
                        '       //move counterbalance vial to centrifuge '
                        '(define CB vial)\n'
                        '\t   vialCB01=rackCB01[vialCB01_Index]\n'
                        '       '
                        'TransportVial(source=vialCB01,destination=centrifuge,destinationIndex=destinationIndexCB01)\n'
                        '        \n'
                        '\t   //centrifuge vial\n'
                        '\n'
                        '\t   '
                        'OperateCentrifugeCover(target=centrifuge,position="Closed")\n'
                        '    \n'
                        '        '
                        'SetCentrifuge(target=centrifuge,speed=speedc,state=true,waitForConstSpeed=waitforconstsc)\n'
                        '        Wait(time=timec)\n'
                        '        '
                        'SetCentrifuge(target=centrifuge,speed=speedc,state=false,waitForConstSpeed=waitforconstsc)\n'
                        '    \n'
                        '\t   //move vial back home\n'
                        '\t   TransportVialHome(vial=vial)\n'
                        '\n'
                        '        //move vial back home\n'
                        '\t   TransportVialHome(vial=vialCB01)\n'
                        '        \n'
                        '\t   '
                        'OperateCentrifugeCover(target=centrifuge,position="Closed")\n'
                        '\n'
                        '       else \n'
                        '            TransportVialHome(vial=vial)\n'
                        '            \n'
                        '            SetStatus(key="Wait",timec)\n'
                        '        \n'
                        '            Wait(time=timec)\n'
                        '    end        \n'
                        '\n'
                        '    USPE() //perform uSPE\n'
                        '        \n'
                        '        \n'
                        '    \n'
                        '    //transfer bottom phase - lc sample prep\n'
                        '\n'
                        '    if lcSamplePrep then\n'
                        '\n'
                        '       for n=1 to dcmTransfers do\n'
                        '    \n'
                        '\t   \t//transfer bottom phase\n'
                        '\n'
                        '        SetStatus(key="Message1Value","Solvent '
                        'Transfer",transferVolume)\n'
                        '        \n'
                        '        if cooledStack  &lt;&gt; none then\n'
                        '\t\n'
                        '\t\t  vial=rackInCooledStack[sampleIndex+Delta]\n'
                        '\t\n'
                        '\t    else\n'
                        '\t\n'
                        '\t\t  vial=supernatantRack[sampleIndex+Delta]  '
                        '//target needs to be re-defined at each cycle\n'
                        '\t\n'
                        '\t    end    \n'
                        '    \n'
                        '\t   MoveToObject(target=vial)\n'
                        '    \n'
                        '       if bottomSenseExtractionVial then '
                        'PenetrateWithBottomSense(target=vial,speed=penetrationSpeed_02,heightFromBottom=heightFromBottom)\n'
                        '    \n'
                        '       else\n'
                        '    \n'
                        '            '
                        'PenetrateObject(target=vial,depth=penetrationDepth_05,speed=penetrationSpeed_02)\n'
                        '    \n'
                        '       end\n'
                        '        \n'
                        '\t   AspirateSyringe(volume=transferVolume)\n'
                        '\t   LeaveObject()\n'
                        '\t\n'
                        '\t   //define new target \n'
                        '\t   vial=sampleRack2[sampleIndex]\n'
                        '\n'
                        '\t   MoveToObject(target=vial)\n'
                        '\t   '
                        'PenetrateObject(target=vial,depth=penetrationDepth_06,speed=penetrationSpeed_02)\n'
                        '\t   DispenseSyringe(volume=transferVolume)\n'
                        '\t   LeaveObject()\n'
                        '\n'
                        '       end \n'
                        '        \n'
                        '    end        \n'
                        '        \n'
                        '\t//clean dcm tool\n'
                        '\t'
                        'CleanSyringe(washSource=washStation,washIndex=dcmIndex,cycles=washCycles,washVolume=washPercentage,washPenetrationDepth=40mm,aspirateFlowRate=200uL/s)\n'
                        '\n'
                        '    if doInjection then\n'
                        '\n'
                        '    //pick 10uL syringe\n'
                        '\tChangeTool(tool=syringe10)\n'
                        '\n'
                        '    //wait for GC to be ready\n'
                        '    SetStatus(key="WaitForSync")\n'
                        '\t'
                        'WaitForSyncSignal(signal=gasChromatograph.Ready)    \n'
                        '        \n'
                        '\t//aspirate sample\n'
                        '    \n'
                        '    SetStatus(key="Message","Perform Injection")\n'
                        '        \n'
                        '    vial=sampleRack[sampleIndex]    //redefine '
                        'target\n'
                        '        \n'
                        '\tMoveToObject(target=vial)\n'
                        '    '
                        'PenetrateObject(target=vial,depth=penetrationDepth_07)\n'
                        '\t'
                        'FillingStrokes(volume=injectionfsVolume,count=injectionfsCount)\n'
                        '\tAspirateSyringe(volume=sampleVolume)\n'
                        '\tLeaveObject()\n'
                        '\n'
                        '\t//inject\n'
                        '    '
                        'InjectSampleGC(injector=injector,injectedSignal=gasChromatograph.Injected)\n'
                        '\n'
                        '\t//clean injection tool\n'
                        '\t'
                        'CleanSyringe(washSource=washStation,washIndex=dcmIndex,cycles=injectionWashCycles,washPenetrationDepth=40mm,aspirateFlowRate=200uL/s)\n'
                        '        \n'
                        '    else\n'
                        '      \n'
                        '    SetSignal( signal=gasChromatograph.Injected /*, '
                        'mode */ )\n'
                        '    Wait(time=1s)    \n'
                        '    end\n'
                        '        \n'
                        '    if lcSamplePrep then    \n'
                        '\n'
                        '        SetStatus(key="Message","Perform LC Sample '
                        'Prep")\n'
                        '        \n'
                        '        //pick 1mL syringe\n'
                        '\t    ChangeTool(tool=syringe1000)\n'
                        '\n'
                        '        //aspirate water\n'
                        '        '
                        'CleanSyringe(washSource=washStation,washIndex=dcmIndex,cycles=injectionWashCycles,washVolume=washPercentage,washPenetrationDepth=40mm,aspirateFlowRate=200uL/s)\n'
                        '        '
                        'MoveToObject(target=solventStation,index=waterIndex)\n'
                        '\t    '
                        'PenetrateObject(target=solventStation,depth=penetrationDepth_01,speed=penetrationSpeed_01)\n'
                        '\t    '
                        'FillingStrokes(volume=waterfsVolume,count=waterfsCount)\n'
                        '\t    AspirateSyringe(volume=lcVolume)\n'
                        '\t    LeaveObject()\n'
                        '\t\n'
                        '        vial=sampleRack2[sampleIndex]     //redefine '
                        'target\n'
                        '        \n'
                        '\t    //add water to target\n'
                        '\t    MoveToObject(target=vial)\n'
                        '\t    '
                        'PenetrateObject(target=vial,depth=penetrationDepth_02,speed=penetrationSpeed_01)\n'
                        '\t    DispenseSyringe(volume=lcVolume)\n'
                        '\t    LeaveObject()\n'
                        '  \n'
                        '        MHE() //do evaporation here\n'
                        '        \n'
                        '        if doFinalDilution then\n'
                        '        \n'
                        '            SetStatus(key="Message","Do Final '
                        'Dilution")\n'
                        '        \n'
                        '        \t//pick 1mL syringe\n'
                        '\t    \tChangeTool(tool=syringe1000)\n'
                        '\n'
                        '        \t//aspirate water\n'
                        '        \t'
                        'MoveToObject(target=solventStation,index=waterIndex)\n'
                        '        \t'
                        'PenetrateObject(target=solventStation,depth=penetrationDepth_01,speed=penetrationSpeed_01)\n'
                        '\t    \t'
                        'FillingStrokes(volume=waterfsVolume,count=waterfsCount)\n'
                        '\t    \tAspirateSyringe(volume=lcVolume2)\n'
                        '\t    \tLeaveObject()\n'
                        '  \n'
                        '        \t//add water to target\n'
                        '\t    \tMoveToObject(target=vial)\n'
                        '\t    \t'
                        'PenetrateObject(target=vial,depth=penetrationDepth_02,speed=penetrationSpeed_01)\n'
                        '\t    \tDispenseSyringe(volume=lcVolume2)\n'
                        '\t    \tLeaveObject()\n'
                        '        \n'
                        '        \t//vortex vial\n'
                        '\t    \t'
                        'VortexVial(source=vial,vortexMixer=vortexMixer,vortexMixerSpeed=vortexMixerSpeed_03,time=vortexTime_03)\n'
                        '        \tTransportVialHome(vial=vial)\n'
                        '        \n'
                        '        end\n'
                        '        \n'
                        '    end     \n'
                        '\n'
                        'end',
              'tags': ['centrifuge',
                       '',
                       '2',
                       'syringe',
                       '',
                       '3',
                       'sample',
                       '',
                       '4',
                       'vortex',
                       '',
                       '5',
                       'volume',
                       '',
                       '6',
                       'aspirate',
                       '',
                       '7',
                       'dilution',
                       '',
                       '8',
                       'transfer',
                       '',
                       '9',
                       'filtration',
                       '',
                       '10',
                       'evaporation',
                       '',
                       '']},
 'score': 0.486427426,
 'values': []}, {'id': 'code_snip_70',
 'metadata': {'description': 'This lab automation script is designed to '
                             'streamline the process of preparing and '
                             'analyzing samples by automating the addition of '
                             'a solvent to vials, followed by heating, '
                             'shaking, and injecting the samples into a gas '
                             'chromatograph (GC) for analysis. \n'
                             '\n'
                             '1. **Get the correct syringe tool**: The script '
                             'begins by selecting the appropriate syringe tool '
                             'required for transferring the solvent. This '
                             'ensures that the correct volume can be '
                             'accurately dispensed without contamination.\n'
                             '\n'
                             '2. **Take volume from solvent vessel**: The '
                             'script then commands the syringe to draw a '
                             'specified volume of solvent from the designated '
                             'solvent vessel. This step is crucial for '
                             'ensuring that each vial receives the exact '
                             'amount of solvent needed for the analysis.\n'
                             '\n'
                             '3. **Transfer to a dynamic vial based on vial '
                             'position in the Chromeleon sequence**: Next, the '
                             'solvent is transferred to a specific dynamic '
                             'vial. The selection of the vial is based on its '
                             'position in the Chromeleon sequence, which '
                             'organizes the order of sample analysis. This '
                             'ensures that the samples are prepared in the '
                             'correct sequence for the subsequent analysis.\n'
                             '\n'
                             '4. **Transfer the vial to an agitator and heater '
                             'and heat and shake to 100 degrees C and 500 '
                             'rpm**: After the solvent has been added to the '
                             'vial, it is moved to an agitator and heater. The '
                             'script controls the heating to 100 degrees '
                             'Celsius while shaking the vial at 500 rpm. This '
                             'step facilitates proper mixing of the solvent '
                             'with the sample, ensuring that the sample is '
                             'homogenous and ready for analysis.\n'
                             '\n'
                             '5. **Take 1 µL and inject into the GC**: '
                             'Finally, the script commands the system to take '
                             'a 1 µL aliquot from the prepared vial and inject '
                             'it into the gas chromatograph (GC). This step '
                             'initiates the analytical process, allowing for '
                             'the detection and quantification of compounds '
                             'present in the sample.\n'
                             '\n'
                             'Overall, this script automates the preparation '
                             'and analysis of samples, improving efficiency '
                             'and accuracy in laboratory workflows.',
              'name': 'code_snip_70',
              'script': '',
              'tags': ['Document',
                       '',
                       '2',
                       'Describe',
                       '',
                       '3',
                       'Generate',
                       '',
                       '4',
                       'Keywords',
                       '',
                       '5',
                       'English',
                       '',
                       '6',
                       'Include',
                       '',
                       '7',
                       'Remove',
                       '',
                       '8',
                       'Words',
                       '',
                       '9',
                       'Found',
                       '',
                       '10',
                       'Return',
                       '',
                       '']},
 'score': 0.484013081,
 'values': []}, {'id': 'code_snip_83',
 'metadata': {'description': 'This lab automation script is designed to '
                             'streamline the process of preparing and '
                             'analyzing samples by automating the addition of '
                             'a solvent, heating, shaking, and injecting the '
                             'samples into a gas chromatograph (GC). \n'
                             '\n'
                             '1. **Get the correct syringe tool**: The script '
                             'starts by selecting the appropriate syringe tool '
                             'that will be used to transfer the solvent from '
                             'the solvent vessel to the vials.\n'
                             '\n'
                             '2. **Take volume from solvent vessel**: The '
                             'script measures and draws a specific volume of '
                             'solvent from the designated solvent vessel using '
                             'the syringe tool.\n'
                             '\n'
                             '3. **Transfer to a dynamic vial based on vial '
                             'position in the Chromeleon sequence**: The '
                             'measured solvent is then transferred to a '
                             'dynamic vial. The specific vial chosen for this '
                             'transfer corresponds to its position in the '
                             'predefined Chromeleon sequence, ensuring that '
                             'each sample is processed in the correct order.\n'
                             '\n'
                             '4. **Transfer the vial to an agitator and heater '
                             'and heat and shake to 100 degrees C and 500 '
                             'rpm**: Once the solvent is in the vial, the vial '
                             'is moved to an agitator/heater unit. The script '
                             'sets the temperature to 100 degrees Celsius and '
                             'the agitation speed to 500 revolutions per '
                             'minute (rpm) to ensure thorough mixing and '
                             'heating of the sample.\n'
                             '\n'
                             '5. **Take 1 ul and inject into the GC**: After '
                             'the sample has been properly prepared through '
                             'heating and shaking, the script takes a 1 '
                             'microliter (µL) aliquot from the vial and '
                             'injects it into the gas chromatograph for '
                             'analysis.\n'
                             '\n'
                             'This automated procedure enhances efficiency and '
                             'accuracy in sample preparation and analysis, '
                             'minimizing manual intervention and potential '
                             'errors.',
              'name': 'code_snip_83',
              'script': '',
              'tags': ['Document',
                       '',
                       '2',
                       'Describe',
                       '',
                       '3',
                       'Generate',
                       '',
                       '4',
                       'Key',
                       '',
                       '5',
                       'Words',
                       '',
                       '6',
                       'English',
                       '',
                       '7',
                       'Dictionary',
                       '',
                       '8',
                       'Include',
                       '',
                       '9',
                       'Remove',
                       '',
                       '10',
                       'Stop']},
 'score': 0.483919084,
 'values': []}, {'id': 'code_snip_86',
 'metadata': {'description': 'This lab automation script is designed to '
                             'streamline the process of preparing and '
                             'analyzing samples by automating the addition of '
                             'a solvent to vials, heating and shaking the '
                             'samples, and injecting them into a Gas '
                             'Chromatograph (GC) for analysis. The script '
                             'ensures consistency and efficiency in sample '
                             'preparation and analysis.\n'
                             '\n'
                             '1. **Get the correct syringe tool**: The script '
                             'begins by selecting the appropriate syringe tool '
                             'needed for transferring the solvent from the '
                             'solvent vessel to the vials.\n'
                             '\n'
                             '2. **Take volume from solvent vessel**: The '
                             'script measures and draws the specified volume '
                             'of solvent from the designated solvent vessel '
                             'using the syringe tool.\n'
                             '\n'
                             '3. **Transfer to a dynamic vial based on vial '
                             'position in the Chromeleon sequence**: The '
                             'script identifies the current vial position in '
                             'the Chromeleon sequence and transfers the drawn '
                             'solvent into the corresponding dynamic vial.\n'
                             '\n'
                             '4. **Transfer the vial to an agitator and heater '
                             'and heat and shake to 100 degrees C and 500 '
                             'rpm**: The filled dynamic vial is then moved to '
                             'an agitator equipped with a heater. The sample '
                             'is heated to 100 degrees Celsius and agitated at '
                             'a speed of 500 revolutions per minute (rpm) to '
                             'ensure thorough mixing and dissolution of the '
                             'solvent with the sample.\n'
                             '\n'
                             '5. **Take 1 µL and inject into the GC**: '
                             'Finally, a precise volume of 1 microliter (µL) '
                             'is taken from the prepared sample and injected '
                             'into the Gas Chromatograph for analysis, '
                             'following the order specified in the Chromeleon '
                             'sequence. \n'
                             '\n'
                             'Each step in the script utilizes specific '
                             'laboratory automation tools and equipment to '
                             'enhance the efficiency and accuracy of the '
                             'sample preparation and analysis process.',
              'name': 'code_snip_86',
              'script': '',
              'tags': ['Document',
                       '',
                       '2',
                       'Describe',
                       '',
                       '3',
                       'Keywords',
                       '',
                       '4',
                       'English',
                       '',
                       '5',
                       'Dictionary',
                       '',
                       '6',
                       'Include',
                       '',
                       '7',
                       'Remove',
                       '',
                       '8',
                       'Return',
                       '',
                       '9',
                       'Words',
                       '',
                       '10',
                       'Found',
                       '',
                       '']},
 'score': 0.482691437,
 'values': []}]